<UserControl x:Class="MySchedule.Views.ToDoView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MySchedule.Views"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <md:DialogHost>
        <!--右侧的通知对话界面-->
        <md:DrawerHost IsRightDrawerOpen="{Binding IsRightDrawerOpen}">
            <md:DrawerHost.RightDrawerContent>
                <DockPanel Width="300" LastChildFill="False">
                    <TextBlock Text="添加待办"
                               FontSize="20"
                               FontWeight="Bold"  
                               DockPanel.Dock="Top"
                               Padding="20,10"/>
                    <StackPanel Orientation="Horizontal"
                                DockPanel.Dock="Top"
                                Margin="20">
                        <TextBlock Text="状态：" 
                                   VerticalAlignment="Center"/>
                        <ComboBox SelectedIndex="{Binding CurrentDto.Status}">
                            <ComboBoxItem>待办</ComboBoxItem>
                            <ComboBoxItem>已完成</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                    <TextBox md:HintAssist.Hint="请输入待办概要"
                             md:TextFieldAssist.HasClearButton="True"
                             DockPanel.Dock="Top"
                               Margin="20,0"
                             Text="{Binding CurrentDto.Title}"/>
                    <TextBox md:HintAssist.Hint="请输入待办内容"
                             md:TextFieldAssist.HasClearButton="True"
                               DockPanel.Dock="Top" 
                               Margin="20"                          
                             MinHeight="100"
                             Text="{Binding CurrentDto.Content}"
                             />
                    <Button Margin="20,0"
                            Content="添加到待办"
                            DockPanel.Dock="Top" 
                            Command="{Binding ExecuteCommand}"
                            CommandParameter="保存"/>
                </DockPanel>
            </md:DrawerHost.RightDrawerContent>
            
            <!--待办事项的显示界面:顶部的查询、中部的显示待办-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <StackPanel Margin="15,0,0,0"
                            Orientation="Horizontal">
                    <TextBox Width="250"
                             Text="{Binding Search,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                             VerticalAlignment="Center"
                             md:HintAssist.Hint="查找待办事项..."
                             md:TextFieldAssist.HasClearButton="True"
                             Cursor="IBeam">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter"
                                        Command="{Binding ExecuteCommand}"
                                        CommandParameter="查询" />
                        </TextBox.InputBindings>
                    </TextBox>

                    <TextBox Text="筛选："
                             Margin="10,0"
                             VerticalAlignment="Center" />
                    <ComboBox SelectedIndex="{Binding SelectedIndex}">
                        <ComboBoxItem>全部</ComboBoxItem>
                        <ComboBoxItem>待办</ComboBoxItem>
                        <ComboBoxItem>已完成</ComboBoxItem>
                    </ComboBox>
                </StackPanel>
                
                <Button HorizontalAlignment="Right"
                        Content="+添加待办"
                        Margin="10,5"
                        Cursor="Hand" 
                        Command="{Binding ExecuteCommand}"
                        CommandParameter="新增"/>
                <ScrollViewer Grid.Row="1">
                    <ItemsControl ItemsSource="{Binding ToDoDtos}"
                                  HorizontalAlignment="Center">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <!--显示动画效果-->
                                <md:TransitioningContent OpeningEffect="{md:TransitionEffect Kind=ExpandIn}">
                                    <Grid Width="220"
                                          MinHeight="180"
                                          MaxHeight="250"
                                          Margin="8">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseRightButtonUp">
                                                <i:InvokeCommandAction CommandParameter="{Binding}"
                                                                       Command="{Binding Datacontext.SelectedCommand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <md:PopupBox HorizontalAlignment="Right"
                                                     Panel.ZIndex="1">
                                            <Button Content="删除"
                                                    CommandParameter="{Binding}"
                                                    Command="{Binding DataContext.DeleteCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl}}"/>
                                        </md:PopupBox>
                                        
                                        <Border CornerRadius="3"
                                                Grid.RowSpan="2"
                                                >
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Status}"
                                                                     Value="0">
                                                            <Setter Property="Background"
                                                                    Value="#1E90FF" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Status}"
                                                                     Value="1">
                                                            <Setter Property="Background"
                                                                    Value="#3CB371" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>
                                        <TextBlock Text="{Binding Title}"
                                                   Padding="10,5"
                                                   FontWeight="Bold"
                                                   FontSize="20" />
                                        <TextBlock Text="{Binding Content}"
                                                   Grid.Row="1"
                                                   Margin="10,5" />
                                        <Canvas ClipToBounds="True"
                                                Grid.RowSpan="2">
                                            <Border Canvas.Top="10"
                                                    Canvas.Right="-50"
                                                    Width="120"
                                                    Height="120"
                                                    Background="#FFFFFF"
                                                    CornerRadius="100"
                                                    Opacity="0.1" />
                                            <Border Canvas.Top="80"
                                                    Canvas.Right="-30"
                                                    Width="120"
                                                    Height="120"
                                                    Background="#FFFFFF"
                                                    CornerRadius="100"
                                                    Opacity="0.1" />
                                        </Canvas>
                                    </Grid>
                                </md:TransitioningContent>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>

            </Grid>
        </md:DrawerHost>

    </md:DialogHost>
    
</UserControl>
